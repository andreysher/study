#!/bin/sh
#####################################################################
# BenchIT - Performance Measurement for Scientific Applications
# Contact: developer@benchit.org
#
# $Id: PARAMETERS 1 2009-09-11 12:26:19Z william $
# $URL: svn+ssh://william@rupert.zih.tu-dresden.de/svn-base/benchit-root/BenchITv6/kernel/numerical/jacobi/Java/0/0/sequential/PARAMETERS $
# For license details see COPYING in the package base directory
#####################################################################
# Kernel: Jacobi algorithm measuring FLOPS (ij, ji) for change of
#         dimension
#####################################################################

 # Iterate over problem size from BENCHIT_KERNEL_PROBLEMSIZE_MIN
 # to BENCHIT_KERNEL_PROBLEMSIZE_MAX, incrementing by
 # BENCHIT_KERNEL_PROBLEMSIZE_INCREMENT with each step.
 BENCHIT_KERNEL_PROBLEMSIZE_MIN=1
 BENCHIT_KERNEL_PROBLEMSIZE_MAX=200
 BENCHIT_KERNEL_PROBLEMSIZE_INCREMENT=1
 
 # JMITS is the maximum number of iterations in the jacobi poisson diff. eq. solver
 # to get a given accuracy (diffnorm of 1.3e-3)
 BENCHIT_KERNEL_JACOBI_JMITS=500

