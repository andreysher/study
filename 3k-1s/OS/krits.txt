1) Понятие файла и файловой системы. Что такое каталог?

Файл - совокупность данных, доступ к которым осуществляется по имени. Является интерфейсом между физическим местоположением информации и ее логическим представлением. Создает иллюзию что данные хранятся последовательно, это происходит за счет структуры inode, в которой хранится размер файла, список указателей на блоки файла на жестком диске, владелец, права доступа, тип файла, время последней модицикации...
Директория, каталог - таблица преобразования имен файлов в адреса. Файл, содержащий несколько inode и привязаные к ним имена.
Файловая система - совокупность каталогов и других метаданных, отслеживающих расположение файлов и свободное пространство. 

2) Определение задачи реального времени.

Реальное время в операционных системах — это способность операционной системы обеспечить требуемый уровень сервиса в определённый промежуток времени,задача, для которой необходимо максимальное гарантированное время реакции на внешние событие

3) Алгоритм работы библиотечных функций malloc/free языка C.

Для выделения используется блоки размером 4096 байт, используется двусвязный кольцевой список с кольцевым просмотром, для выделения памяти используется метод first fit(выбираем первый подходящий блок) для освобождения используется алгоритм схожий с алгоритмом парных меток(сохраняем размер в словах/байтах данного конкретного блока в начале и в конце самого блока, и если блок свободен, то пишем положительные числа, если занят, то отрицательные). Специальный массив _heap_info хранит дескрипторы блоков, причем размещение дескрипторов соответствует размещению страниц в пуле. Дескриптор хранит начало области, размер и статус. Головные дескрипторы всех областей связаны в два списка. Первый хранит все дескрипторы, отсортированные по расположению, и используется при освобождении памяти, как в алгоритме парных меток. Второй, неотсортированный, хранит только свободные области. Для запросов меньше размера блока, делим блок на размер кратный степени двойки, называемые фрагментами и используем их. Для запросов на 1024 и 512 байт будет выделено по блоку и внутри блоков по одному фрагменту. При последующих запросах на такие размеры будут использоваться фрагменты уже в этих блоках. Все свободные фрагменты одинакового размера объединены в общий список.  file:///home/andrey/%D0%97%D0%B0%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D0%B8/182454.pdf  www.bhv.ru/books/get_pdf_data.php?id=182454 

4) Что такое системный и пользовательский режимы процессора?

(?) Режим супервизора — привилегированный режим работы процессора, как правило используемый для выполнения ядра операционной системы.
В данном режиме работы процессора доступны привилегированные операции, как то: операции ввода-вывода к периферийным устройствам, изменение параметров защиты памяти, настроек виртуальной памяти, системных параметров и прочих параметров конфигурации. Как правило, в режиме супервизора или вообще не действуют ограничения защиты памяти или же они могут быть произвольным образом изменены, поэтому код, работающий в данном режиме, как правило, имеет полный доступ ко всем системным ресурсам (адресное пространство, регистры конфигурации процессора и т. п.).

5) Что такое транзакция?

Группа операций модификации разделяемой структуры данных, которая происходит неделимо, не прерываясь никакими другими операциями с этой структурой данных,  называется транзакцией. 

6) Что такое семафоры Дейкстры?

Семафор Дейкстры представляет собой целочисленную переменную, с которой ассоциирована очередь ожидающих нитей. Стараясь пройти через семафор, нить пытается вычесть из значения переменной 1. Если значение переменной >= 1, нить проходит сквозь семафор успешно (семафор открыт). Если переменная равна 0 (семафор закрыт), нить останавливается и ставится в очередь.
Закрытие семафора соответствует захвату объекта или ресурса, доступ к которому контролируется этим семафором. Если объект захвачен, остальные нити вынуждены ждать его освобождения. Закончив работу с объектом (выйдя из критической секции), нить увеличивает значение семафора на единицу, открывая его. При этом какая-то из нитей активизируется и вычитает из значения семафора единицу, снова закрывая семафор. Если же очередь была пуста, то ничего не происходит, просто семафор остается открытым. Тогда первая нить, подошедшая к семафору, успешно пройдет через него.


7) Что такое мертвая блокировка?

Состояние, при котором несколько процессов находятся в состоянии бесконечного взаимоожидания ресурсов, занятых самими этими процессами.

8) Что такое контекст процесса?

Полный набор регистров, которые нужно сохранить, чтобы нить не заметила переключения.
/* ^ это только регистровый контекст*/
Каждому процессу соответствует контекст, в котором он выполняется. Этот контекст включает содержимое пользовательского адресного пространства - пользовательский контекст и содержимое аппаратных регистров - регистровый контекст.

К таким регистрам, как минимум, относятся все регистры общего назначения, указатель стека, счетчик команд и слово состояния процессора. Если система использует виртуальную память, то в контекст входят также регистры диспетчера памяти, управляющие трансляцией виртуального адреса.

9) Что такое гармонически взаимодействующие последовательные про-
цессы?

Взаимодействие между процессами, когда глобальные переменные и разделяемая память не используются

Концепция, которая состоит в следующем:
Каждая нить представляет независимый программный модуль. 
Нити не имеют разделяемых данных.
Все передачи данных происходят через специальные примитивы, которые представляют и средство передачи данных и средство синхронизации. 

1. Каждый поток (нить) представляет собой независимый программный модуль, для которого создаётся иллюзия чисто последовательного исполнения.
2. Нити не имеют разделяемых данных.
3. Все обмены данными и вообще взаимодействие происходят с использованием специальных примитивов, которые одновременно выполняют и передачу данных, и синхронизацию.
4. Синхронизация, не сопровождающаяся передачей данных, просто лишена смысла - нити, не имеющие разделяемых структур данных, совершенно независимы и не имеют ни критических точек, ни нереентерабельных модулей.
Ключевым является пункт 3.

10) Что такое селектор страницы (сегмента) в сегментных и страничных
диспетчерах памяти?

Индекс в таблице трансляции. Определяет номер дескриптора станицы в таблице виртуальных страниц.

!!!

Таблица трансляции - мапка селектор-дискриптор, где селектор - номер в таблице виртуальных страниц, а дикриптор физический адрес страницы памяти.

• Что такое дескриптор страницы (сегмента) в сегментных и странич-
ных диспетчерах памяти?

Элемент таблицы трансляции. Определяет физическое расположение страницы в памяти. 

!!!

• Что такое абсолютный и относительный загрузчики?

Абсолютный загрузчик.
Всегда грузим программу с одного и того же адреса. 
Необходимо, чтобы:
Система должна предоставлять каждому процессу свое адресное пространство, либо чтобы
Система может исполнять только один процесс единовременно

Относительный загрузчик. 
Программа запускается каждый раз с нового адреса. Адреса объектов хранятся в виде смещения относительно друг-друга.

• Что является элементом таблицы перемещений в относительном (пе-
ремещаемом) загрузочном модуле?

Адреса объектов ????

Место ссылки на ассемблерный символ(соотв адресу) в коде или в данных

• Что такое позиционно-независимый код?

Такую программу можно переместить в другую область памяти в любой момент (и загружать потом с нового адреса без перенастройки). Адрес получается сложением адреса команды (счетчик команд) и адресного поля.

• Что такое реентерабельная программа?

Программный модуль, который не имеет критических секций или обеспечивает их взаимное исключение называется реентерабельным.



• Что такое критическая секция?

Интервал в течении которого нарушается целостность разделяемой структуры данных (???) или в течении которого алгоритм полагается на целостность этой структуры, называется критической секцией. 
Интервал в течении которого модификация нарушает целостность разделяемой структуры данных или в течении которого алгоритм нити полагается на целостность этой структуры, называется критической секцией. 

• Кольца доступа и списки контроля доступа.

Список контроля доступа определяет, кто или что может получать доступ к конкретному объекту, и какие именно операции разрешено или запрещено этому субъекту проводить над объектом. 
Кольца доступа - архитектура информационной безопасности и функциональной отказоустойчивости, реализующая аппаратное разделение системного и пользовательского уровней привилегий. (кстати не только на аппаратном уровне)
(А на каком ещё?) (скажу только, что это может быть реализовано не только на аппаратном уровне. и лучше не говорить вообще об этом)

• Кооперативные многозадачные системы и вытесняющая (preemptive)
многозадачность.

Принцип кооперативной многозадачности - принцип переключения по инициативе активной нити. Принцип переключения по инициативе системы - вытесняющая многозадачность. 


1 2 3 4 5 7 8 9 10 11 12 13 14 15 16 19 21